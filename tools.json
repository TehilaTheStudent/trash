{
    "result": {
        "tools": [
            {
                "name": "createBuildTask",
                "description": "Create a new build task in CodeArts Build.  This defines how to build an artifact such as a Docker image or compiled code,  The created build task can be used in a pipeline through the official_devcloud_cloudBuild plugin. \n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "body": {
                            "type": "object",
                            "properties": {
                                "arch": {
                                    "type": "string",
                                    "description": "Architecture (e.g., x86-64, arm)."
                                },
                                "project_id": {
                                    "type": "string",
                                    "description": "ID of the project."
                                },
                                "job_name": {
                                    "type": "string",
                                    "description": "Name of the build task."
                                },
                                "source_code": {
                                    "type": "string",
                                    "description": "Source code (e.g., codeci)."
                                },
                                "auto_update_sub_module": {
                                    "type": "string",
                                    "description": "Whether to auto update submodules."
                                },
                                "flavor": {
                                    "type": "string",
                                    "description": "Build execution flavor."
                                },
                                "build_config_type": {
                                    "type": "string",
                                    "description": "Type of build configuration."
                                },
                                "host_type": {
                                    "type": "string",
                                    "description": "Type of host. should be 'devcloud'"
                                },
                                "parameters": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Parameter class name (e.g., hudson.model.StringParameterDefinition)."
                                                    },
                                                    "params": {
                                                        "type": "array",
                                                        "items": {
                                                            "anyOf": [
                                                                {
                                                                    "not": {}
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string",
                                                                            "description": "Parameter name."
                                                                        },
                                                                        "value": {
                                                                            "type": "string",
                                                                            "description": "Parameter value."
                                                                        }
                                                                    },
                                                                    "additionalProperties": false
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        ]
                                    }
                                },
                                "scms": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "description": "SCM type (e.g., git)."
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "description": "Repository URL."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Branch name."
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        ]
                                    }
                                },
                                "steps": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "module_id": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "version": {
                                                "type": "string"
                                            },
                                            "enable": {
                                                "type": "boolean"
                                            },
                                            "properties": {
                                                "type": "object",
                                                "properties": {
                                                    "image": {
                                                        "type": "string"
                                                    },
                                                    "registryUrl": {
                                                        "type": "object",
                                                        "properties": {
                                                            "displayName": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "endpointUuid": {
                                                        "type": "object",
                                                        "additionalProperties": {},
                                                        "description": "Optional object, can be empty or contain endpoint identifiers"
                                                    },
                                                    "authUser": {
                                                        "type": "object",
                                                        "properties": {
                                                            "displayName": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    },
                                                    "iamEndPoint": {
                                                        "type": "object",
                                                        "additionalProperties": {},
                                                        "description": "Optional object, can be empty or contain IAM endpoint info"
                                                    },
                                                    "selectRegion": {
                                                        "type": "string"
                                                    },
                                                    "organization": {
                                                        "type": "string"
                                                    },
                                                    "imageName": {
                                                        "type": "string"
                                                    },
                                                    "tag": {
                                                        "type": "string"
                                                    },
                                                    "contextPath": {
                                                        "type": "string"
                                                    },
                                                    "dockerFilePath": {
                                                        "type": "string"
                                                    },
                                                    "setMetaData": {
                                                        "type": "string"
                                                    },
                                                    "preCondition": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        },
                                        "required": [
                                            "module_id",
                                            "name",
                                            "version",
                                            "enable",
                                            "properties"
                                        ],
                                        "additionalProperties": false
                                    }
                                }
                            },
                            "required": [
                                "arch",
                                "project_id",
                                "job_name",
                                "host_type",
                                "steps"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryCodeArtsBuildTasks",
                "description": "Query CodeArts Build Tasks in a project. Build tasks define how to build artifacts  such as Docker images or compiled code, and may include steps to push them to a registry. \n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "page_index": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "description": "Page number, indicating that the query starts from this page. The value of page_index is greater than or equal to 0."
                        },
                        "page_size": {
                            "type": "integer",
                            "maximum": 100,
                            "default": 10,
                            "description": "Number of items displayed on each page. The value of page_size is less than or equal to 100."
                        }
                    },
                    "required": [
                        "project_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryCodeArtsBuildTaskDetails",
                "description": "Retrieve the details of a specific CodeArts Build Task.  This includes its configured steps, environment, and actions,  allowing you to understand exactly how the task is set up to build and push artifacts.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "job_id": {
                            "type": "string",
                            "description": "Build task ID. The task ID contains the 32 digits and letters at the end of the browser URL when the build task is edited."
                        },
                        "get_all_params": {
                            "type": "boolean",
                            "default": true,
                            "description": "Specify whether returned parameters are complete."
                        }
                    },
                    "required": [
                        "job_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "listCCEClusters",
                "description": "List all Huawei Cloud CCE clusters in a project,  a CCE cluster can be used as an intrastructure resource for a Release Environment in CodeArts.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "offset": {
                            "type": "integer",
                            "default": 0
                        },
                        "limit": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryCheckTasks",
                "description": "Query the list of code check tasks in the CodeArts Check module. A code check task defines static analysis rules or security scans to evaluate source code quality.  These tasks can be used as steps in a pipeline using the `official_devcloud_codeCheck` plugin.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "offset": {
                            "type": "integer",
                            "default": 0,
                            "description": "Offset for pagination."
                        },
                        "limit": {
                            "type": "integer",
                            "maximum": 100,
                            "default": 10,
                            "description": "Number of items displayed on each page. A maximum of 100 items are supported."
                        }
                    },
                    "required": [
                        "project_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "listDeployApplications",
                "description": "Query the list of Deploy Applications in the CodeArts Deploy module. A Deploy Application defines a series of deployment actions, such as deploying to Kubernetes clusters or host machines. It can be used to deploy a service or site written in any programming language. These applications can be reused in CodeArts pipelines via the official plugin `official_devcloud_deploy`.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "body": {
                            "type": "object",
                            "properties": {
                                "project_id": {
                                    "type": "string",
                                    "description": "Project ID. 32 characters, letters and digits."
                                },
                                "page": {
                                    "type": "integer",
                                    "default": 1,
                                    "description": "Page number, 1-99999."
                                },
                                "size": {
                                    "type": "integer",
                                    "default": 100,
                                    "description": "Items per page, 1-100."
                                },
                                "sort_name": {
                                    "type": "string",
                                    "default": "",
                                    "description": "Sort field name (name, startTime)."
                                },
                                "sort_by": {
                                    "type": "string",
                                    "default": "",
                                    "description": "Sorting sequence (ASC, asc, DESC, desc)."
                                },
                                "states": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "default": [],
                                    "description": "Application status list (abort, failed, not_started, pending, running, succeeded, timeout, not_executed)."
                                },
                                "group_id": {
                                    "type": "string",
                                    "default": "",
                                    "description": "Application group ID or 'no_grouped'."
                                }
                            },
                            "required": [
                                "project_id"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "getDeployApplicationDetails",
                "description": "Retrieve the details of a specific Deploy Application in the CodeArts Deploy module. This provides the full configuration of the application, including the sequence of deployment actions  it is set up to execute (e.g., deploy to Kubernetes or host).  Use this to inspect how a deploy application is structured before using it in a pipeline.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "app_id": {
                            "type": "string",
                            "description": "Application ID (32 characters, letters and digits)"
                        }
                    },
                    "required": [
                        "app_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryDeploymentConfigurationList",
                "description": "Get all deployment configurations of a microservice in CodeArts. A deployment configuration defines how a microservice in CodeArts should be deployed, including the deployment strategy (e.g., GitOps or ReleasePolicy), source git repository containing k8s deployment manifests (Helm chart or Kustomize). It is used when deploying a microservice instance in CodeArts Release environment.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "component_id": {
                            "type": "string",
                            "description": "component id"
                        },
                        "key_word": {
                            "type": "string",
                            "description": "keyword search"
                        },
                        "deployment_config_ids": {
                            "type": "string",
                            "description": "get specific deployment configs"
                        },
                        "offset": {
                            "type": "integer",
                            "default": 0,
                            "description": "pagination start, the default value is 0"
                        },
                        "limit": {
                            "type": "integer",
                            "default": 10,
                            "description": "pagination end, the default value is 10"
                        }
                    },
                    "required": [
                        "project_id",
                        "component_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "createDeploymentConfiguration",
                "description": "Create a new deployment configuration for a microservice in CodeArts. The configuration defines how the microservice should be deployed, including its deployment engine (e.g., GitOps), the source Git repository containing Kubernetes manifests (e.g., Helm or Kustomize), target namespace, and other deployment metadata. This configuration is later referenced when deploying the microservice instance to a specific CodeArts Release environment.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "component_id": {
                            "type": "string",
                            "description": "component id"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "component_id": {
                                    "type": "string"
                                },
                                "project_id": {
                                    "type": "string"
                                },
                                "deployment_manifest": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "component_id",
                                "project_id",
                                "deployment_manifest"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "component_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "deleteDeploymentConfiguration",
                "description": "Delete a deployment configuration of a microservice in CodeArts.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "component_id": {
                            "type": "string",
                            "description": "component id"
                        },
                        "deployment_config_id": {
                            "type": "string",
                            "description": "deployment config id"
                        }
                    },
                    "required": [
                        "project_id",
                        "component_id",
                        "deployment_config_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "updateDeploymentConfiguration",
                "description": "Update an existing deployment configuration in CodeArts. Modify Deployment Engine (e.g GitOps), source git repository, artifact type (Helm or Kustomize), target namespace, Helm parameters.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "component_id": {
                            "type": "string",
                            "description": "component id"
                        },
                        "deployment_config_id": {
                            "type": "string",
                            "description": "deployment config id"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "component_id": {
                                    "type": "string"
                                },
                                "project_id": {
                                    "type": "string"
                                },
                                "deployment_manifest": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "component_id",
                                "project_id",
                                "deployment_manifest"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "component_id",
                        "deployment_config_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryMicroserviceInstanceListByEnvironment",
                "description": "Retrieve the list of Microservice Instances deployed in a specific Release Environment in CodeArts. A Microservice Instance represents the deployment of a microservice in a particular release environment.  It references target release environment, the microservice being deployed, and the deployment configuration that defines how the deployment is performed. It may also include an override of values from the deployment configuration, to allow environment-specific customization.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "env id"
                        },
                        "offset": {
                            "type": "integer",
                            "default": 0,
                            "description": "offset0"
                        },
                        "limit": {
                            "type": "integer",
                            "description": "limit10"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "createMicroserviceInstanceInEnvironment",
                "description": "Creates a Microservice Instance by deploying the microservice to a release environment in CodeArts using the selected deployment configuration, supports overriding configuration values as needed. this operation will triggers creation of all associated Kubernetes resources defined by the deployment configuration in the environment.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "env id"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "environment_id": {
                                    "type": "string",
                                    "description": "environment_id"
                                },
                                "component_id": {
                                    "type": "string",
                                    "description": "componentId"
                                },
                                "component_name": {
                                    "type": "string",
                                    "description": "componentName"
                                },
                                "deployment_config_id": {
                                    "type": "string",
                                    "description": "deployment_config_id"
                                },
                                "deployment_manifest": {
                                    "type": "string",
                                    "description": "deployment manifest override"
                                },
                                "description": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "environment_id",
                                "component_id",
                                "component_name",
                                "deployment_config_id",
                                "deployment_manifest"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "updateMicroserviceInstanceInEnvironment",
                "description": "Updates an existing Microservice Instance deployed in a release environment in CodeArts, modify the deployment configuration or override values as needed.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "env id"
                        },
                        "unit_id": {
                            "type": "string",
                            "description": "deployment unit id"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "environment_id": {
                                    "type": "string",
                                    "description": "environment_id"
                                },
                                "component_id": {
                                    "type": "string",
                                    "description": "componentId"
                                },
                                "component_name": {
                                    "type": "string",
                                    "description": "componentName"
                                },
                                "deployment_config_id": {
                                    "type": "string",
                                    "description": "deployment_config_id"
                                },
                                "deployment_manifest": {
                                    "type": "string",
                                    "description": "deployment manifest override"
                                },
                                "description": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "environment_id",
                                "component_id",
                                "component_name",
                                "deployment_config_id",
                                "deployment_manifest"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id",
                        "unit_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "deleteMicroserviceInstanceById",
                "description": "Delete a microservice instance deployed in a release environment in CodeArts This operation removes the microservice instance from the release environment and triggers the deletion of all associated Kubernetes resources defined by the deployment configuration.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "env id"
                        },
                        "unit_id": {
                            "type": "string",
                            "description": "deployment unit id"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id",
                        "unit_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryReleaseEnvironmentCategoryList",
                "description": "Get codearts release environment category list, containing types (DEVELOPMENT, TEST, PRODUCT, PRE_PRODUCTION)  and id of each category\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{32}$",
                            "description": "Project ID"
                        },
                        "offset": {
                            "type": "integer",
                            "default": 0,
                            "description": "Page start, default 0"
                        },
                        "limit": {
                            "type": "integer",
                            "default": 10,
                            "description": "Page size, default 10"
                        }
                    },
                    "required": [
                        "project_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryReleaseEnvironmentList",
                "description": "Retrieve the list of CodeArts release environments. An environment is a deployment target for microservice, It is linked with infrastructure resource (CCE container engine cluster, K8S cluster, UCS host)\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{32}$",
                            "description": "Project ID"
                        },
                        "environment_category_id": {
                            "type": "string",
                            "description": "Environment category ID"
                        },
                        "key_word": {
                            "type": "string",
                            "description": "Query keyword"
                        },
                        "resource_id": {
                            "type": "string",
                            "description": "Resource ID"
                        },
                        "resource_type": {
                            "type": "string",
                            "description": "Resource type"
                        },
                        "offset": {
                            "type": "integer",
                            "default": 0,
                            "description": "Page start, default 0"
                        },
                        "limit": {
                            "type": "integer",
                            "default": 10,
                            "description": "Page size, default 10"
                        }
                    },
                    "required": [
                        "project_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "createReleaseEnvironment",
                "description": "Create new CodeArts release environment, the environment resource is infrastructure cluster, that can be of type CCE, K8S or UCS, you give the resource details for an environment in the context object that is provided in the CreateEnvironment parameters, and each resource requires different fields to be filled in the context object and in the body object:  for CCE resource type, that is huawei cloud Cloud Container Engine,  1. list cce clusters to get a cce cluster id 2. fill  the cluster_id field in the body.context object, 3. fill empty string ( \"\" ) in the body.endpoint_id and body.endpoint_name for k8s resource type, that is service endpoint of k8s cluster, 1.  list service endpoints, find service endpoint of type k8s and get its id,  2. fill the body.context.endpoint_id and body.context.endpoint_name fields in the body.context object 3. fill the body.endpoint_id and body.endpoint_name fields in the body object as well, otherwise the k8s service endpoint wont be linked to the environment properly after creation of the release environment you can deploy microservice instances to it  \n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{32}$",
                            "description": "Project ID"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "context": {
                                    "type": "object",
                                    "properties": {
                                        "cluster_id": {
                                            "type": "string",
                                            "default": "",
                                            "description": "Cluster ID, in case resource type is CCE, use this info from list clusters and get a cce cluster id, or leave empty if resource type is K8S or UCS"
                                        },
                                        "endpoint_id": {
                                            "type": "string",
                                            "default": "",
                                            "description": "Endpoint ID, in case resource type is K8S, use this info from list endpoints and get a k8s endpoint id, or leave empty if resource type is CCE or UCS"
                                        },
                                        "endpoint_name": {
                                            "type": "string",
                                            "default": "",
                                            "description": "Endpoint name, in case resource type is K8S, use this info from list endpoints and get a k8s endpoint name, or leave empty if resource type is CCE or UCS"
                                        },
                                        "region": {
                                            "type": "string",
                                            "default": "ap-southeast-3",
                                            "description": "Region, same region as project"
                                        },
                                        "region_name": {
                                            "type": "string",
                                            "default": "AP-singapure",
                                            "description": "Region name, use if resource type is CCE"
                                        },
                                        "user_type": {
                                            "type": "string",
                                            "enum": [
                                                "current_user"
                                            ],
                                            "default": "current_user",
                                            "description": "User type, current_user or other_users"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "description": {
                                    "type": "string",
                                    "default": "",
                                    "description": "Description"
                                },
                                "endpoint_id": {
                                    "type": "string",
                                    "description": "k8s service endpoint id"
                                },
                                "endpoint_name": {
                                    "type": "string",
                                    "description": "k8s service endpoint name"
                                },
                                "environment_category_id": {
                                    "type": "string",
                                    "description": "Environment level"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Environment name"
                                },
                                "resource_type": {
                                    "type": "string",
                                    "enum": [
                                        "CCE",
                                        "K8S",
                                        "UCS"
                                    ],
                                    "description": "Type of resource"
                                },
                                "user_type": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "default": 0,
                                    "description": "User type 0 - current user, 1 - other users"
                                }
                            },
                            "required": [
                                "context",
                                "endpoint_id",
                                "endpoint_name",
                                "environment_category_id",
                                "name",
                                "resource_type"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "updateReleaseEnvironmentById",
                "description": "Update CodeArts release environment information, such as description and infrastructure resource",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{32}$",
                            "description": "Project ID"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "Environment ID"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "context": {
                                    "type": "object",
                                    "properties": {
                                        "cluster_id": {
                                            "type": "string",
                                            "default": "",
                                            "description": "Cluster ID, in case resource type is CCE, use this info from list clusters and get a cce cluster id, or leave empty if resource type is K8S or UCS"
                                        },
                                        "endpoint_id": {
                                            "type": "string",
                                            "default": "",
                                            "description": "Endpoint ID, in case resource type is K8S, use this info from list endpoints and get a k8s endpoint id, or leave empty if resource type is CCE or UCS"
                                        },
                                        "endpoint_name": {
                                            "type": "string",
                                            "default": "",
                                            "description": "Endpoint name, in case resource type is K8S, use this info from list endpoints and get a k8s endpoint name, or leave empty if resource type is CCE or UCS"
                                        },
                                        "region": {
                                            "type": "string",
                                            "default": "ap-southeast-3",
                                            "description": "Region, same region as project"
                                        },
                                        "region_name": {
                                            "type": "string",
                                            "default": "AP-singapure",
                                            "description": "Region name, use if resource type is CCE"
                                        },
                                        "user_type": {
                                            "type": "string",
                                            "enum": [
                                                "current_user"
                                            ],
                                            "default": "current_user",
                                            "description": "User type, current_user or other_users"
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "endpoint_id": {
                                    "type": "string",
                                    "description": "Extension point ID"
                                },
                                "endpoint_name": {
                                    "type": "string",
                                    "description": "Extension point name"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Environment name"
                                },
                                "user_type": {
                                    "type": "integer",
                                    "description": "User type 0 - current user, 1 - other users"
                                }
                            },
                            "required": [
                                "context",
                                "name"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "deleteReleaseEnvironmentById",
                "description": "Delete CodeArts release environment, this deletes all microservice instances deployed in this environment as well",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "pattern": "^[a-f0-9]{32}$",
                            "description": "Project ID"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "Environment ID"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "deleteGitopsRuntime",
                "description": "Delete Gitops Runtime installed on release environment in CodeArts after deletion copy the deletion command from CodeArts platform UI and run it on your k8s cluster or cce cluster to uninstall the Gitops Runtime\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "env id"
                        },
                        "runtime_id": {
                            "type": "string",
                            "description": "runtime id"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id",
                        "runtime_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "GetGitopsRuntimeByEnvironmentResourceId",
                "description": "Get Gitops Runtime installed on specified resource ( resource is k8s cluster or cce cluster) in CodeArts use this when you want to check whether the GitOps Runtime is installed on a k8s cluster or cce cluster that is a resource of a release environment in CodeArts. The GitOps Runtime runs on your Kubernetes (or CCE) cluster and acts as the deployment engine for microservice instances. It continuously compares the desired state of each microservice instance—defined by its deployment configuration—with the actual state in the cluster, and automatically applies changes to keep them in sync.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "env id"
                        },
                        "resource_type": {
                            "type": "string",
                            "enum": [
                                "CCE",
                                "K8S",
                                "UCS"
                            ],
                            "description": "filter resource type"
                        },
                        "resource_id": {
                            "type": "string",
                            "description": "filter resource id"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id",
                        "resource_type",
                        "resource_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "createGitopsRuntime",
                "description": "Creating a Gitops Runtime on specified resource ( resource is k8s cluster or cce cluster), after creation, obtain installation command from CodeArts platform UI and install the Gitops Runtime on your k8s cluster or cce cluster after installation, you can deploy microservice instances on the release environment and the Gitops Runtime will automatically apply changes to the cluster\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "project id"
                        },
                        "env_id": {
                            "type": "string",
                            "description": "env id"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "resource_id": {
                                    "type": "string"
                                },
                                "resource_type": {
                                    "type": "string",
                                    "enum": [
                                        "CCE",
                                        "K8S"
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "env_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "UpdateMicroserviceRepo",
                "description": "Update CodeArts microservice code repository",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "cloudProjectId": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "componentId": {
                            "type": "string",
                            "description": "Microservice ID"
                        },
                        "body": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "The type of the repository. It can be codehub or gitlab."
                                    },
                                    "repo_id": {
                                        "type": "string",
                                        "description": "The ID of the repository."
                                    },
                                    "http_url": {
                                        "type": "string",
                                        "description": "The HTTP URL of the repository."
                                    },
                                    "git_url": {
                                        "type": "string",
                                        "description": "WarehouseGIT address, An SSH Git repository address is a secure URL-like string used to connect and interact with a remote Git repository over the SSH protocol."
                                    },
                                    "branch": {
                                        "type": "string",
                                        "description": "Branch"
                                    },
                                    "language": {
                                        "type": "string",
                                        "description": "The programming language of the component, should be one of the following - java, python, go, nodejs, php, none, other."
                                    },
                                    "endpoint_id": {
                                        "type": "string",
                                        "description": "The endpoint ID of the component."
                                    }
                                },
                                "required": [
                                    "type",
                                    "repo_id",
                                    "http_url",
                                    "git_url",
                                    "branch",
                                    "language"
                                ],
                                "additionalProperties": false
                            },
                            "description": "Microservice code repository"
                        }
                    },
                    "required": [
                        "cloudProjectId",
                        "componentId",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "ShowMicroserviceDetail",
                "description": "Query CodeArts Microservice details, show git code repository of the microservice\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "cloudProjectId": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "componentId": {
                            "type": "string",
                            "description": "Microservice ID"
                        }
                    },
                    "required": [
                        "cloudProjectId",
                        "componentId"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "ListMicroservice",
                "description": "Query CodeArts Microservices list, a microservice is linked to a code repository,  a microservice can have deployment configurations, and can be deployed in a CodeArts release environment\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "cloudProjectId": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "offset": {
                                    "type": "integer",
                                    "description": "Offset"
                                },
                                "limit": {
                                    "type": "integer",
                                    "description": "Size"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Microservice name"
                                },
                                "sort_dir": {
                                    "type": "string",
                                    "description": "Sorting direction"
                                }
                            },
                            "required": [
                                "offset",
                                "limit"
                            ],
                            "additionalProperties": false,
                            "description": "Request body for querying the microservice list"
                        }
                    },
                    "required": [
                        "cloudProjectId",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "CreateMicroservice",
                "description": "Create CodeArts microservice, choose git code repository,  after you create the microservice,  you can add deployment configurations for it, and deployed the microservice in a CodeArts release environment with the deployment configuration\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "cloudProjectId": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name should consist only of letters, numbers and _ without spaces or special characters."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "The type of the component. It can be microservice or application."
                                },
                                "parent_id": {
                                    "type": "string",
                                    "description": "The parent ID of the component."
                                },
                                "desc": {
                                    "type": "string",
                                    "description": "The description of the component."
                                },
                                "repos": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "description": "The type of the repository. It can be codehub or gitlab."
                                            },
                                            "repo_id": {
                                                "type": "string",
                                                "description": "The ID of the repository."
                                            },
                                            "http_url": {
                                                "type": "string",
                                                "description": "The HTTP URL of the repository."
                                            },
                                            "git_url": {
                                                "type": "string",
                                                "description": "WarehouseGIT address, An SSH Git repository address is a secure URL-like string used to connect and interact with a remote Git repository over the SSH protocol."
                                            },
                                            "branch": {
                                                "type": "string",
                                                "description": "Branch"
                                            },
                                            "language": {
                                                "type": "string",
                                                "description": "The programming language of the component, should be one of the following - java, python, go, nodejs, php, none, other."
                                            },
                                            "endpoint_id": {
                                                "type": "string",
                                                "description": "The endpoint ID of the component."
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "repo_id",
                                            "http_url",
                                            "git_url",
                                            "branch",
                                            "language"
                                        ],
                                        "additionalProperties": false
                                    },
                                    "description": "The repositories of the component."
                                }
                            },
                            "required": [
                                "name",
                                "type",
                                "parent_id",
                                "desc",
                                "repos"
                            ],
                            "additionalProperties": false,
                            "description": "Response body for creating the microservice"
                        }
                    },
                    "required": [
                        "cloudProjectId",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "DeleteMicroservice",
                "description": "Delete CodeArts microservice",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "cloudProjectId": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "componentId": {
                            "type": "string",
                            "description": "Microservice ID"
                        }
                    },
                    "required": [
                        "cloudProjectId",
                        "componentId"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "GetPipelineRunDetail",
                "description": "Get pipeline status and execution details",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "pipeline_id": {
                            "type": "string",
                            "description": "Pipeline ID"
                        },
                        "pipeline_run_id": {
                            "type": "string",
                            "minLength": 32,
                            "maxLength": 32,
                            "description": "Pipeline run ID. 32 characters, digits and letters."
                        }
                    },
                    "required": [
                        "project_id",
                        "pipeline_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "DeletePipeline",
                "description": "Delete pipeline",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "pipeline_id": {
                            "type": "string",
                            "description": "Pipeline ID"
                        }
                    },
                    "required": [
                        "project_id",
                        "pipeline_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "QueryPipelineDetail",
                "description": "Query pipeline details",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "pipeline_id": {
                            "type": "string",
                            "description": "Pipeline ID"
                        }
                    },
                    "required": [
                        "project_id",
                        "pipeline_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "UpdatePipelineInfo",
                "description": "Update pipeline",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "pipeline_id": {
                            "type": "string",
                            "description": "Pipeline ID"
                        },
                        "componentId": {
                            "type": "string",
                            "description": "Microservice ID"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Pipeline name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Pipeline description"
                                },
                                "is_publish": {
                                    "type": "string",
                                    "description": "Whether it is a release pipeline"
                                },
                                "sources": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "description": "Pipeline source type"
                                            },
                                            "params": {
                                                "type": "object",
                                                "properties": {
                                                    "git_type": {
                                                        "type": "string",
                                                        "description": "Code repository type"
                                                    },
                                                    "codehub_id": {
                                                        "type": "string",
                                                        "description": "codehub code repository ID"
                                                    },
                                                    "endpoint_id": {
                                                        "type": "string",
                                                        "description": "Extension point ID"
                                                    },
                                                    "default_branch": {
                                                        "type": "string",
                                                        "description": "Default branch"
                                                    },
                                                    "git_url": {
                                                        "type": "string",
                                                        "description": "代码仓https地址"
                                                    },
                                                    "ssh_git_url": {
                                                        "type": "string",
                                                        "description": "代码仓ssh地址"
                                                    },
                                                    "web_url": {
                                                        "type": "string",
                                                        "description": "Code repository page address"
                                                    },
                                                    "repo_name": {
                                                        "type": "string",
                                                        "description": "Code repository name"
                                                    },
                                                    "alias": {
                                                        "type": "string",
                                                        "description": "Code repository alias, The value can contain only letters, digits, and underscores (_)."
                                                    }
                                                },
                                                "required": [
                                                    "git_type",
                                                    "git_url",
                                                    "ssh_git_url"
                                                ],
                                                "additionalProperties": false,
                                                "description": "Source parameters"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "params"
                                        ],
                                        "additionalProperties": false,
                                        "description": "Describes the source of the pipeline, e.g., a code repository."
                                    },
                                    "description": "Pipeline source"
                                },
                                "variables": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "description": "Pipeline custom global variables"
                                },
                                "schedules": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "cron": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "description": "Pipeline scheduled execution configuration"
                                },
                                "triggers": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "enable": {
                                                        "type": "boolean",
                                                        "default": true,
                                                        "description": "Whether the trigger is enabled"
                                                    },
                                                    "events": {
                                                        "type": "array",
                                                        "items": {
                                                            "anyOf": [
                                                                {
                                                                    "not": {}
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "type": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "push",
                                                                                "tag_push",
                                                                                "merge_request",
                                                                                "delete"
                                                                            ],
                                                                            "description": "Type of the event"
                                                                        },
                                                                        "enable": {
                                                                            "type": "boolean",
                                                                            "default": true,
                                                                            "description": "Whether the event is enabled"
                                                                        },
                                                                        "branches": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "string"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ],
                                                                            "description": "Branches to include in the trigger"
                                                                        },
                                                                        "exclude_branches": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "string"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ],
                                                                            "description": "Branches to exclude from the trigger"
                                                                        },
                                                                        "tags": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "string"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ],
                                                                            "description": "Tags to include in the trigger (for tag_push events)"
                                                                        },
                                                                        "exclude_tags": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "string"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ],
                                                                            "description": "Tags to exclude from the trigger (for tag_push events)"
                                                                        },
                                                                        "paths": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "string"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ],
                                                                            "description": "File paths to include in the trigger"
                                                                        },
                                                                        "exclude_paths": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "string"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ],
                                                                            "description": "File paths to exclude from the trigger"
                                                                        },
                                                                        "create": {
                                                                            "type": [
                                                                                "boolean",
                                                                                "null"
                                                                            ],
                                                                            "description": "Whether to trigger on merge request creation (for merge_request events)"
                                                                        },
                                                                        "merge": {
                                                                            "type": [
                                                                                "boolean",
                                                                                "null"
                                                                            ],
                                                                            "description": "Whether to trigger on merge (for merge_request events)"
                                                                        },
                                                                        "update": {
                                                                            "type": [
                                                                                "boolean",
                                                                                "null"
                                                                            ],
                                                                            "description": "Whether to trigger on merge request update (for merge_request events)"
                                                                        },
                                                                        "code_update": {
                                                                            "type": [
                                                                                "boolean",
                                                                                "null"
                                                                            ],
                                                                            "description": "Whether to trigger on code update (for merge_request events)"
                                                                        },
                                                                        "reopen": {
                                                                            "type": [
                                                                                "boolean",
                                                                                "null"
                                                                            ],
                                                                            "description": "Whether to trigger on merge request reopen (for merge_request events)"
                                                                        }
                                                                    },
                                                                    "additionalProperties": false
                                                                }
                                                            ]
                                                        },
                                                        "description": "List of trigger events"
                                                    },
                                                    "git_url": {
                                                        "type": "string",
                                                        "description": "Git repository URL"
                                                    },
                                                    "git_type": {
                                                        "type": "string",
                                                        "description": "Type of git repository (e.g., codehub, github, gitlab)"
                                                    },
                                                    "human_name": {
                                                        "type": "string",
                                                        "description": "Human-readable name for the trigger"
                                                    },
                                                    "endpoint_id": {
                                                        "type": "string",
                                                        "description": "Endpoint ID for the git repository"
                                                    },
                                                    "codehub_id": {
                                                        "type": "string",
                                                        "description": "CodeHub repository ID"
                                                    },
                                                    "is_auto_comment": {
                                                        "type": "boolean",
                                                        "description": "Whether to automatically comment on pull requests"
                                                    },
                                                    "state": {
                                                        "type": "integer",
                                                        "description": "Trigger state (1 = active, 0 = inactive)"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "description": "Pipeline code event trigger configuration"
                                },
                                "manifest_version": {
                                    "type": "string",
                                    "description": "Pipeline structure definition version, new version defaults to 3.0"
                                },
                                "definition": {
                                    "type": "object",
                                    "properties": {
                                        "stages": {
                                            "type": "array",
                                            "items": {
                                                "anyOf": [
                                                    {
                                                        "not": {}
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "sequence": {
                                                                "type": "string"
                                                            },
                                                            "jobs": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "identifier_old": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "stage_index": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "integer"
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "type": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "async": {
                                                                            "type": [
                                                                                "boolean",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "identifier": {
                                                                            "type": "string"
                                                                        },
                                                                        "sequence": {
                                                                            "type": "integer"
                                                                        },
                                                                        "condition": {
                                                                            "type": "string"
                                                                        },
                                                                        "strategy": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "select_strategy": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "additionalProperties": false
                                                                        },
                                                                        "timeout": {
                                                                            "type": "string"
                                                                        },
                                                                        "resource": {
                                                                            "type": "string"
                                                                        },
                                                                        "steps": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "runtime_attribution": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "multi_step_editable": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "official_task_version": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "icon_url": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "name": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "task": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "business_type": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "inputs": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "not": {}
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "object",
                                                                                                            "properties": {
                                                                                                                "key": {
                                                                                                                    "type": "string"
                                                                                                                },
                                                                                                                "value": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "additionalProperties": false
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "null"
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "env": {
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "anyOf": [
                                                                                                {
                                                                                                    "not": {}
                                                                                                },
                                                                                                {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    "sequence": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "identifier": {
                                                                                        "type": [
                                                                                            "string",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "endpoint_ids": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "type": "array",
                                                                                                "items": {
                                                                                                    "anyOf": [
                                                                                                        {
                                                                                                            "not": {}
                                                                                                        },
                                                                                                        {
                                                                                                            "type": "string"
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            },
                                                                                            {
                                                                                                "type": "null"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "task",
                                                                                    "sequence",
                                                                                    "identifier"
                                                                                ],
                                                                                "additionalProperties": false
                                                                            }
                                                                        },
                                                                        "stage_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "pipeline_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "unfinished_steps": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "not": {}
                                                                                    },
                                                                                    {
                                                                                        "type": "string"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "condition_tag": {
                                                                            "type": "string"
                                                                        },
                                                                        "exec_type": {
                                                                            "type": "string"
                                                                        },
                                                                        "depends_on": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "not": {}
                                                                                    },
                                                                                    {
                                                                                        "type": "string"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "reusable_job_id": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "identifier"
                                                                    ],
                                                                    "additionalProperties": false
                                                                }
                                                            },
                                                            "identifier": {
                                                                "type": "string"
                                                            },
                                                            "pre": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "runtime_attribution": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "multi_step_editable": {
                                                                            "type": "integer"
                                                                        },
                                                                        "official_task_version": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "icon_url": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "name": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "task": {
                                                                            "type": "string"
                                                                        },
                                                                        "business_type": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "inputs": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "object",
                                                                                                "properties": {
                                                                                                    "key": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "value": {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                },
                                                                                                "additionalProperties": false
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "env": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "anyOf": [
                                                                                    {
                                                                                        "not": {}
                                                                                    },
                                                                                    {
                                                                                        "type": "string"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        "sequence": {
                                                                            "type": "integer"
                                                                        },
                                                                        "identifier": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "endpoint_ids": {
                                                                            "anyOf": [
                                                                                {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "string"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "type": "null"
                                                                                }
                                                                            ]
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "task",
                                                                        "sequence",
                                                                        "identifier"
                                                                    ],
                                                                    "additionalProperties": false
                                                                }
                                                            },
                                                            "post": {
                                                                "anyOf": [
                                                                    {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "runtime_attribution": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "multi_step_editable": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "official_task_version": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "icon_url": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "name": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "task": {
                                                                                    "type": "string"
                                                                                },
                                                                                "business_type": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "inputs": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "anyOf": [
                                                                                                    {
                                                                                                        "not": {}
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "object",
                                                                                                        "properties": {
                                                                                                            "key": {
                                                                                                                "type": "string"
                                                                                                            },
                                                                                                            "value": {
                                                                                                                "type": "string"
                                                                                                            }
                                                                                                        },
                                                                                                        "additionalProperties": false
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "null"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "env": {
                                                                                    "type": "array",
                                                                                    "items": {
                                                                                        "anyOf": [
                                                                                            {
                                                                                                "not": {}
                                                                                            },
                                                                                            {
                                                                                                "type": "string"
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                },
                                                                                "sequence": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "identifier": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "endpoint_ids": {
                                                                                    "anyOf": [
                                                                                        {
                                                                                            "type": "array",
                                                                                            "items": {
                                                                                                "anyOf": [
                                                                                                    {
                                                                                                        "not": {}
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "string"
                                                                                                    }
                                                                                                ]
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "null"
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "task",
                                                                                "sequence",
                                                                                "identifier"
                                                                            ],
                                                                            "additionalProperties": false
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "null"
                                                                    }
                                                                ]
                                                            },
                                                            "depends_on": {
                                                                "type": "array",
                                                                "items": {
                                                                    "anyOf": [
                                                                        {
                                                                            "not": {}
                                                                        },
                                                                        {
                                                                            "type": "string"
                                                                        }
                                                                    ]
                                                                }
                                                            },
                                                            "run_always": {
                                                                "type": "boolean"
                                                            },
                                                            "pipeline_id": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "additionalProperties": false,
                                    "description": "Pipeline structure definition"
                                },
                                "project_name": {
                                    "type": "string",
                                    "description": "Project name"
                                },
                                "group_id": {
                                    "type": "string",
                                    "description": "Pipeline group ID"
                                }
                            },
                            "additionalProperties": false,
                            "description": "Template create pipeline request body parameters"
                        }
                    },
                    "required": [
                        "project_id",
                        "pipeline_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "CreatePipelineNew",
                "description": "Creating a pipeline",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Pipeline name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Pipeline description"
                                },
                                "is_publish": {
                                    "type": "string",
                                    "description": "Whether it is a release pipeline"
                                },
                                "sources": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "description": "Pipeline source type"
                                            },
                                            "params": {
                                                "type": "object",
                                                "properties": {
                                                    "git_type": {
                                                        "type": "string",
                                                        "description": "Code repository type"
                                                    },
                                                    "codehub_id": {
                                                        "type": "string",
                                                        "description": "codehub code repository ID"
                                                    },
                                                    "endpoint_id": {
                                                        "type": "string",
                                                        "description": "Extension point ID"
                                                    },
                                                    "default_branch": {
                                                        "type": "string",
                                                        "description": "Default branch"
                                                    },
                                                    "git_url": {
                                                        "type": "string",
                                                        "description": "代码仓https地址"
                                                    },
                                                    "ssh_git_url": {
                                                        "type": "string",
                                                        "description": "代码仓ssh地址"
                                                    },
                                                    "web_url": {
                                                        "type": "string",
                                                        "description": "Code repository page address"
                                                    },
                                                    "repo_name": {
                                                        "type": "string",
                                                        "description": "Code repository name"
                                                    },
                                                    "alias": {
                                                        "type": "string",
                                                        "description": "Code repository alias, The value can contain only letters, digits, and underscores (_)."
                                                    }
                                                },
                                                "required": [
                                                    "git_type",
                                                    "git_url",
                                                    "ssh_git_url"
                                                ],
                                                "additionalProperties": false,
                                                "description": "Source parameters"
                                            }
                                        },
                                        "required": [
                                            "type",
                                            "params"
                                        ],
                                        "additionalProperties": false,
                                        "description": "Describes the source of the pipeline, e.g., a code repository."
                                    },
                                    "description": "Pipeline source"
                                },
                                "definition": {
                                    "type": "string",
                                    "description": "Pipeline structure definition"
                                }
                            },
                            "additionalProperties": false,
                            "description": "Creating a pipeline request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "ListPipelines",
                "description": "List pipelines/Get project pipeline execution status",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "project_ids": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "component_id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    }
                                },
                                "is_publish": {
                                    "type": "boolean",
                                    "description": "Whether it is a change pipeline"
                                },
                                "creator_ids": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "description": "Creator ID list"
                                },
                                "executor_ids": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "description": "Executor ID list"
                                },
                                "start_time": {
                                    "type": "string",
                                    "description": "Start time"
                                },
                                "end_time": {
                                    "type": "string",
                                    "description": "End time"
                                },
                                "offset": {
                                    "type": "integer",
                                    "description": "Start offset"
                                },
                                "limit": {
                                    "type": "integer",
                                    "description": "Query quantity"
                                },
                                "sort_key": {
                                    "type": "string",
                                    "description": "Sort field name"
                                },
                                "sort_dir": {
                                    "type": "string",
                                    "description": "Sort rule"
                                }
                            },
                            "additionalProperties": false,
                            "description": "Query pipeline list request body"
                        }
                    },
                    "required": [
                        "project_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "RunPipeline",
                "description": "Run pipeline",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "Project ID"
                        },
                        "pipeline_id": {
                            "type": "string",
                            "description": "Pipeline ID"
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "sources": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "description": "源类型"
                                                    },
                                                    "params": {
                                                        "type": "object",
                                                        "properties": {
                                                            "git_type": {
                                                                "type": "string",
                                                                "description": "代码仓类型"
                                                            },
                                                            "codehub_id": {
                                                                "type": "string",
                                                                "description": "codehub代码库ID"
                                                            },
                                                            "default_branch": {
                                                                "type": "string",
                                                                "description": "默认分支"
                                                            },
                                                            "git_url": {
                                                                "type": "string",
                                                                "description": "git仓库https地址"
                                                            },
                                                            "endpoint_id": {
                                                                "type": "string",
                                                                "description": "扩展点ID"
                                                            },
                                                            "build_params": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "build_type": {
                                                                        "type": "string",
                                                                        "description": "分支还是tag触发"
                                                                    },
                                                                    "target_branch": {
                                                                        "type": "string",
                                                                        "description": "运行分支"
                                                                    },
                                                                    "tag": {
                                                                        "type": "string",
                                                                        "description": "运行tag"
                                                                    },
                                                                    "event_type": {
                                                                        "type": "string",
                                                                        "description": "触发事件类型"
                                                                    }
                                                                },
                                                                "additionalProperties": false,
                                                                "description": "具体构建参数"
                                                            }
                                                        },
                                                        "additionalProperties": false,
                                                        "description": "源参数"
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        ]
                                    },
                                    "description": "使用的源"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "运行描述"
                                },
                                "variables": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {}
                                        ]
                                    },
                                    "description": "使用的自定义参数"
                                },
                                "items": {},
                                "choose_jobs": {
                                    "type": "array",
                                    "items": {
                                        "anyOf": [
                                            {
                                                "not": {}
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ]
                                    },
                                    "description": "选择的任务"
                                }
                            },
                            "additionalProperties": false,
                            "description": "运行流水线请求体"
                        }
                    },
                    "required": [
                        "project_id",
                        "pipeline_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryCodeArtsPipelinePluginsList",
                "description": "Query the CodeArts Pipeline plugins marketplace to discover available tools  that can be used as steps within a pipeline. These plugins represent reusable tasks such as codecheck, build, test, or deploy, and can be inserted into pipeline definitions to automate CI/CD workflows.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "domain_id": {
                            "type": "string",
                            "description": "Domain ID of the user, ^[a-f0-9]{32}$"
                        },
                        "offset": {
                            "type": "integer",
                            "default": 0,
                            "description": "Offset."
                        },
                        "limit": {
                            "type": "integer",
                            "default": 100,
                            "description": "Size."
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "use_condition": {
                                    "type": "string",
                                    "description": "use \"pipeline\""
                                },
                                "input_repo_type": {
                                    "type": "string",
                                    "description": "Source code repository type, CodeArts Repo, GitLab, or GitHub."
                                },
                                "input_source_type": {
                                    "type": "string",
                                    "description": "use \"single\""
                                },
                                "business_type": {
                                    "type": "string",
                                    "enum": [
                                        "Normal",
                                        "Build",
                                        "Deploy",
                                        "Test",
                                        "Gate",
                                        ""
                                    ],
                                    "description": "use \"\", or business_type to filter plugins by category and use case"
                                },
                                "regex_name": {
                                    "type": "string",
                                    "description": "use \"\", or single keyword without spaces"
                                }
                            },
                            "required": [
                                "use_condition",
                                "input_repo_type",
                                "input_source_type",
                                "business_type",
                                "regex_name"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "domain_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "queryCodeArtsPipelinePluginUsageGuide",
                "description": "Retrieve the input configuration schema and usage instructions for a specific  CodeArts Pipeline plugin. This should be called whenever a plugin (tool/action)  is added to a pipeline, to ensure correct parameter values, required fields,  and proper usage. Use this to validate or generate the plugin's input in a pipeline definition.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "domain_id": {
                            "type": "string",
                            "description": "Tenant ID."
                        },
                        "body": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "plugin_name": {
                                        "type": "string",
                                        "description": "plugin unique identifier, must be data.plugins_list.plugin_name  retrieved by using tool queryPluginsList"
                                    },
                                    "display_name": {
                                        "type": "string",
                                        "default": "",
                                        "description": "the plugin display name"
                                    },
                                    "plugin_attribution": {
                                        "type": "string",
                                        "default": "",
                                        "description": "Plugin attribute. The value can be custom or official.  must be retrieved by using tool queryPluginsList"
                                    },
                                    "version_attribution": {
                                        "type": "string",
                                        "default": "",
                                        "description": "Version attribute. The value can be draft or formal."
                                    }
                                },
                                "required": [
                                    "plugin_name"
                                ],
                                "additionalProperties": false
                            },
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "domain_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "listProjects",
                "description": "List all projects in CodeArts and obtain creator info ( such as user_id, domain_id ) about each project",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "offset": {
                            "type": "integer",
                            "default": 0
                        },
                        "limit": {
                            "type": "integer",
                            "default": 10
                        },
                        "search": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9_-]{1,100}$"
                        }
                    },
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "createWorkItem",
                "description": "Create a new work item in CodeArts Work module.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "The unique identifier of the project."
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "Description"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Title"
                                },
                                "priority_id": {
                                    "type": "number",
                                    "description": "Priority, 1: low, In 2, 3 high"
                                },
                                "tracker_id": {
                                    "type": "number",
                                    "description": "Work item type. The options are as follows: 2: task; 3: defect /Bug,5Epic,6Feature,7Story. The value 5 can only be the parent work item type of 6. 6 can only be the parent work item type of 7. The value 7 can only be the parent of 2 or 3."
                                }
                            },
                            "required": [
                                "name",
                                "priority_id",
                                "tracker_id"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id",
                        "body"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "listWorkItems",
                "description": "List work items of a project by creation time in CodeArts Work module.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "The unique identifier of the project."
                        },
                        "body": {
                            "type": "object",
                            "properties": {
                                "offset": {
                                    "type": "integer"
                                },
                                "limit": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 100
                                }
                            },
                            "required": [
                                "offset",
                                "limit"
                            ],
                            "additionalProperties": false,
                            "description": "Request body"
                        }
                    },
                    "required": [
                        "project_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "getWorkItem",
                "description": "Get work item details in CodeArts Work module.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_id": {
                            "type": "string",
                            "description": "The unique identifier of the project."
                        },
                        "issue_id": {
                            "type": "integer",
                            "description": "The unique identifier of the work item."
                        }
                    },
                    "required": [
                        "project_id",
                        "issue_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "ListRepositoryMergeRequests",
                "description": "Get merge request list of a repository in CodeArts Repo.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "repository_id": {
                            "type": "string"
                        },
                        "state": {
                            "type": "string",
                            "enum": [
                                "opened",
                                "closed",
                                "merged",
                                "locked",
                                "all"
                            ],
                            "default": "all",
                            "description": "MR status. Values: opened, closed, merged, locked, all. Default: all."
                        },
                        "page": {
                            "type": "string",
                            "default": "1",
                            "description": "Page number. A positive integer. Default: 1."
                        },
                        "per_page": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 2147483647,
                            "default": 20,
                            "description": "Number of records displayed on each page. Range: 0–2147483647. Default: 20."
                        },
                        "search": {
                            "type": "string",
                            "maxLength": 100,
                            "description": "String contained in MR titles or descriptions. Max. 100 characters."
                        }
                    },
                    "required": [
                        "repository_id"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "GetMergeRequestDiscussions",
                "description": "Get reviews for a merge request in CodeArts Repo.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "repository_id": {
                            "type": "string"
                        },
                        "merge_request_iid": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string",
                            "enum": [
                                "user",
                                "system"
                            ],
                            "description": "Review type"
                        },
                        "unresolved": {
                            "type": "string",
                            "description": "Whether the review is unsolved"
                        },
                        "author_id": {
                            "type": "string",
                            "description": "Filtered review comments created by user. The value can be user ID or username."
                        },
                        "page": {
                            "type": "integer",
                            "default": 1,
                            "description": "Number of the page whose review comments will be returned."
                        },
                        "per_page": {
                            "type": "integer",
                            "default": 20,
                            "description": "Every page with review comments will be returned."
                        }
                    },
                    "required": [
                        "repository_id",
                        "merge_request_iid"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "GetMergeRequestPipeline",
                "description": "Get Merge Request last executed pipeline in CodeArts Repo.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "repository_id": {
                            "type": "string"
                        },
                        "merge_request_iid": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "repository_id",
                        "merge_request_iid"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "listProjectRepositories",
                "description": "List all CodeArts Repo repositories in a project, can add search query with the name of the repo\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_uuid": {
                            "type": "string"
                        },
                        "page_index": {
                            "type": "integer",
                            "description": "Page index, starting from 1"
                        },
                        "page_size": {
                            "type": "integer",
                            "description": "Record number on each page"
                        },
                        "search": {
                            "type": "string",
                            "description": "Search keyword"
                        }
                    },
                    "required": [
                        "project_uuid"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "listServiceEndpoints",
                "description": "List all service endpoints for a projet in CodeArts. Service endpoints provide links to third-party services to extend your DevOps experience through CodeArts. For example, a service endpoint can link you to a Git repository on GitHub to obtain source code, to Jenkins to complete certain tasks, or to a Kubernetes cluster to deploy containerized applications.\n",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "project_uuid": {
                            "type": "string",
                            "description": "same as project id, this is required"
                        },
                        "region_name": {
                            "type": "string",
                            "description": "use ap-southeast-3, this is required"
                        },
                        "module_id": {
                            "type": "string",
                            "description": "Module ID"
                        },
                        "offset": {
                            "type": "integer",
                            "description": "Page number"
                        },
                        "limit": {
                            "type": "integer",
                            "description": "Number of records per page"
                        }
                    },
                    "required": [
                        "project_uuid",
                        "region_name"
                    ],
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            },
            {
                "name": "listSwrOrganizations",
                "description": "List Huawei Cloud SWR (Software Repository For Containers) organizations",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "filter": {
                            "type": "string",
                            "default": "",
                            "description": "fill ''"
                        }
                    },
                    "additionalProperties": false,
                    "$schema": "http://json-schema.org/draft-07/schema#"
                }
            }
        ]
    },
    "jsonrpc": "2.0",
    "id": 1
}