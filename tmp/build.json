[
  {
    "plugin_name": "official_devcloud_cloudBuild",
    "input_configuration": [
      {
        "inputKey": "__sameProject__",
        "valueLabel": "Project Config",
        "valueHelpTips": "Project Config",
        "inputUIComponent": "d-radio-group",
        "defaultValue": "true",
        "options": {
          "type": "fixed",
          "choices": [
            {
              "labelToShowUser": "This Project",
              "optionActualValue": "true",
              "isCheckedByDefault": true
            },
            {
              "labelToShowUser": "Select Project",
              "optionActualValue": "false",
              "isCheckedByDefault": false
            }
          ]
        },
        "dataType": "string"
      },
      {
        "inputKey": "__projectId__",
        "valueLabel": "Select Project",
        "valueHelpTips": "Select Project",
        "displayUIComponentIfConditions": [
          {
            "inputKey": "__sameProject__",
            "equation": "===",
            "valueToEqualTo": "false"
          }
        ],
        "inputUIComponent": "d-select",
        "options": {
          "type": "api",
          "apiOptions": {
            "requestDetails": {
              "url": "/v1/project/queryRelatedProject",
              "method": "GET",
              "queryParams": {
                "archive": "1",
                "pageNo": "1",
                "pageSize": "50",
                "queryType": "simplify"
              },
              "headers": {},
              "body": {},
              "relatedInputKeys": [
                "__sameProject__"
              ]
            },
            "responseDetails": {
              "responsePath": "result.projectInfoList",
              "labelToShowUser": "name",
              "valueToFill": "identifier"
            }
          }
        },
        "inputValueExample": "option1",
        "dataType": "string"
      },
      {
        "inputKey": "jobId",
        "valueLabel": "Select Task",
        "valueHelpTips": "Select a task which has same repository or configured to be called from pipeline",
        "valueValidations": [
          {
            "ruleType": "required",
            "isRequired": true,
            "message": "请选择需要调用的任务不能为空"
          }
        ],
        "inputUIComponent": "link-select",
        "options": {
          "type": "api",
          "apiOptions": {
            "requestDetails": {
              "url": "/v3/pipelines/plugin-tasks",
              "method": "POST",
              "queryParams": {},
              "headers": {},
              "body": {
                "project_id": "${__sameProject__}===true?${project_id}:${__projectId__}",
                "task_type": "buildJob",
                "repo_info": "${repo_info}"
              },
              "relatedInputKeys": [
                "__sameProject__",
                "__projectId__"
              ]
            },
            "responseDetails": {
              "responsePath": "",
              "labelToShowUser": "name",
              "valueToFill": "id"
            }
          }
        },
        "dataType": "string"
      },
      {
        "inputKey": "__repository__",
        "valueLabel": "Repository",
        "displayUIComponentIfConditions": [
          {
            "inputKey": "jobId",
            "equation": "notEmpty",
            "valueToEqualTo": ""
          }
        ],
        "valueValidations": [
          {
            "ruleType": "required",
            "isRequired": true,
            "message": "仓库不能为空"
          }
        ],
        "inputUIComponent": "d-select",
        "options": {
          "type": "context",
          "dataSource": "repoSource",
          "explanation": "each option is name of the repo from the sources repos of the pipeline"
        },
        "inputValueExample": "option1",
        "dataType": "string"
      },
      {
        "inputKey": "artifactIdentifier",
        "valueLabel": "Artifact Identifier",
        "valueHelpTips": "Used to identify the artifact of the build task, for example: if the ID of the build task is build_job, and the artifact identifier is defined as demo, then the artifact information can be obtained using ${jobs.build_job.artifacts.demo}} in subsequent tasks.",
        "inputUIComponent": "d-input",
        "dataType": "string"
      }
    ]
  }
]
